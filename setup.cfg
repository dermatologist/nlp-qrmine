# This file is used to configure your project.
# Read more about the various options under:
# http://setuptools.readthedocs.io/en/latest/setuptools.html#configuring-setup-using-setup-cfg-files

[metadata]
name = qrmine
description = Qualitative Research support tools in Python!
author = beapen
author_email = github@gulfdoctor.net
license = gpl3
url = https://github.com/dermatologist/nlp-qrmine
long_description = file: README.md
long_description_content_type = text/markdown
# Change if running only on Windows, Mac or Linux (comma-separated)
platforms = any
# Add here all kinds of additional classifiers as defined under
# https://pypi.python.org/pypi?%3Aaction=list_classifiers
classifiers =
    Intended Audience :: Science/Research
    Development Status :: 4 - Beta
    Operating System :: OS Independent
    Programming Language :: Python
    Programming Language :: Python :: 3.5
	Programming Language :: Python :: 3.6
    Programming Language :: Python :: 3.7
    Topic :: Scientific/Engineering :: Information Analysis

[options]
zip_safe = False
packages = find_namespace:
include_package_data = True
package_dir =
    =src
# Add here dependencies of your project (semicolon-separated), e.g.
# install_requires = numpy; scipy
# install_requires = numpy; pandas; matplotlib; imbalanced-learn==0.4.3; scikit-learn==0.20.4; xgboost; mlxtend; Keras; keras-text; click; vaderSentiment; spacy; textacy; tensorflow>=1.13.1
# Format


install_requires =
    importlib-metadata; python_version<"3.8"
    pandas
    matplotlib
    click
    scikit-learn
    imbalanced-learn
    vaderSentiment
    xgboost
    mlxtend
    spacy==2.3.7
    textacy==0.10.0
    tensorflow
    # below is not supported by pypi
    # en_core_web_sm @ https://github.com/explosion/spacy-models/releases/download/en_core_web_sm-2.3.1/en_core_web_sm-2.3.1.tar.gz#egg=en_core_web_sm

# install_requires=pyemd; numpy; pandas; matplotlib; click; scikit-learn==0.20.4; imbalanced-learn; vaderSentiment; xgboost; mlxtend; spacy>=2.2.0,<3.0.0; textacy==0.8.0; tensorflow



# Add here test requirements (semicolon-separated)
tests_require = pytest; pytest-cov

[options.packages.find]
where = src
exclude =
    tests

[options.extras_require]
# Add here additional requirements for extra features, to install with:
# `pip install qrmine[PDF]` like:
# PDF = ReportLab; RXP

[options.entry_points]
# Add here console scripts like:
# console_scripts =
#     script_name = qrmine.module:function
# For example:
# console_scripts =
#     fibonacci = qrmine.skeleton:run
# And any other entry points, for example:
# pyscaffold.cli =
#     awesome = pyscaffoldext.awesome.extension:AwesomeExtension

console_scripts =
    qrmine = qrmine.main:main_routine

[test]
# py.test options when running `python setup.py test`
addopts = tests

[tool:pytest]
# Options for py.test:
# Specify command line options as you would do when invoking py.test directly.
# e.g. --cov-report html (or xml) for html/xml output or --junitxml junit.xml
# in order to write a coverage file that can be read by Jenkins.
addopts =
    --verbose
norecursedirs =
    dist
    build
    .tox

[aliases]
release = sdist bdist_wheel upload

[bdist_wheel]
# Use this option if your package is pure-python
universal = 1

[build_sphinx]
source_dir = docs
build_dir = docs/_build

[devpi:upload]
# Options for the devpi: PyPI server and packaging tool
# VCS export must be deactivated since we are using setuptools-scm
no-vcs = 1
formats = bdist_wheel

[flake8]
# Some sane defaults for the code style checker flake8
exclude =
    .tox
    build
    dist
    .eggs
    docs/conf.py

[pyscaffold]
# PyScaffold's parameters when the project was created.
# This will be used when updating. Do not change!
version = 4.0.2
package = qrmine
